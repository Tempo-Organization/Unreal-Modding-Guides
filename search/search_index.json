{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Unreal-Modding-Guides","text":"<p>This site is a collection of useful guides for Unreal Engine modding.</p> <p>You\u2019ll find examples for working with Blueprints, engine functions, materials, and more.</p> <p>Check the Guides section in the top bar to browse the available guides.</p>"},{"location":"community/","title":"Community","text":""},{"location":"community/#unreal-engine-modding-related-discords","title":"Unreal Engine Modding Related Discords","text":"<ul> <li>Tempo Discord</li> <li>Unreal Engine Modding Discord</li> <li>UE4SS Discord</li> </ul>"},{"location":"contributing/","title":"How to Contribute","text":"<p>You need <code>git</code> and <code>uv</code> installed.</p>"},{"location":"contributing/#setup","title":"Setup","text":"<p>Clone the repo, then <code>cd</code> into it, and run the following commands:</p> <pre><code>uv venv\nuv run pre-commit install\nuv run pre-commit install --hook-type commit-msg\nuv run pre-commit install --hook-type pre-push\n</code></pre>"},{"location":"contributing/#working-with-docs","title":"Working with Docs","text":"<ul> <li>Run the docs locally for live editing:</li> </ul> <p><code>bash   uv run mkdocs serve</code></p> <ul> <li>Build the offline docs:</li> </ul> <p><code>bash   uv run mkdocs build</code></p>"},{"location":"contributing/#committing-changes","title":"Committing Changes","text":"<ul> <li>Use <code>git add</code> / <code>git rm</code> to stage file changes.</li> <li>Use the commitizen CLI:</li> </ul> <p><code>bash   uv run cz commit</code></p> <p>Or retry a previous commit:</p> <p><code>bash   uv run cz commit --retry</code></p> <ul> <li>Push your changes:</li> </ul> <p><code>bash   git push</code></p>"},{"location":"contributing/#repo-structure","title":"Repo Structure","text":"<ul> <li>Place images in:</li> </ul> <p><code>assets/images/</code></p> <ul> <li>Place videos in:</li> </ul> <p><code>assets/videos/</code></p> <ul> <li>Configure page structure and order in:</li> </ul> <p><code>mkdocs.yml</code></p> <ul> <li>Custom site styles are in:</li> </ul> <p><code>docs/stylesheets/extra.css</code></p>"},{"location":"guides/blueprints/check_when_function_fires/","title":"Check When Function Fires","text":""},{"location":"guides/blueprints/find_components_for_modding/","title":"Find Components For Modding","text":"<p>Notes:\\ Takes into account when an actor's components and center are not near eachother \\ Works regardless of custom collison channel bs per game \\ you can change the radius to make the scan larger, it scans sphere around player</p>"},{"location":"guides/blueprints/free_camera/","title":"Free Camera","text":""},{"location":"guides/blueprints/key_press_macro/","title":"Key Press Macro","text":""},{"location":"guides/blueprints/menu_toggle_example/","title":"Menu Toggle Example","text":""},{"location":"guides/blueprints/passing_event_to_macro_to_fire/","title":"Passing Event To Macro To Fire","text":""},{"location":"guides/blueprints/possesion_toggle/","title":"Possession Toggle Example","text":""},{"location":"guides/blueprints/reapply_model_materials/","title":"Reapply Model Materials","text":""},{"location":"guides/blueprints/spawning_and_setting_validated_get/","title":"Spawning And Setting Validated Get","text":""},{"location":"guides/blueprints/website_editor_utility_widget/","title":"Website Editor Utility Widget","text":"<p>Keep in mind, what sites will work, depends on the cef version in your unreal engine install. \\ For 4.27 and below, many newer sites using newer technologies may not load</p> <p>The example site from the video:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\" /&gt;\n  &lt;title&gt;Color to PNG Generator&lt;/title&gt;\n  &lt;style&gt;\n    body {\n      font-family: sans-serif;\n      background-color: #1e1e1e;\n      color: #fff;\n      text-align: center;\n      padding: 2em;\n    }\n    input, button {\n      margin: 0.5em;\n      padding: 0.5em;\n      border-radius: 5px;\n    }\n    #preview {\n      margin-top: 1em;\n    }\n    #preview img {\n      border: 1px solid #555;\n      image-rendering: pixelated;\n    }\n    canvas {\n      display: none;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Color to PNG Generator&lt;/h1&gt;\n\n  &lt;label&gt;Hex (e.g. #ff000080): \n    &lt;input type=\"text\" id=\"hex\" value=\"#ff0000ff\" maxlength=\"9\" /&gt;\n  &lt;/label&gt;\n  &lt;br/&gt;\n  &lt;label&gt;R: &lt;input type=\"number\" id=\"r\" min=\"0\" max=\"255\" value=\"255\" /&gt;&lt;/label&gt;\n  &lt;label&gt;G: &lt;input type=\"number\" id=\"g\" min=\"0\" max=\"255\" value=\"0\" /&gt;&lt;/label&gt;\n  &lt;label&gt;B: &lt;input type=\"number\" id=\"b\" min=\"0\" max=\"255\" value=\"0\" /&gt;&lt;/label&gt;\n  &lt;label&gt;A (0.0\u20131.0): &lt;input type=\"number\" id=\"a\" min=\"0\" max=\"1\" step=\"0.01\" value=\"1.0\" /&gt;&lt;/label&gt;\n  &lt;br/&gt;\n  &lt;button onclick=\"downloadPNG()\"&gt;Download PNG&lt;/button&gt;\n\n  &lt;div id=\"preview\"&gt;\n    &lt;strong&gt;Live Preview:&lt;/strong&gt;&lt;br/&gt;\n    &lt;img id=\"previewImg\" width=\"128\" height=\"128\" /&gt;\n  &lt;/div&gt;\n\n  &lt;!-- Hidden canvas used for PNG generation --&gt;\n  &lt;canvas id=\"canvas\" width=\"256\" height=\"256\"&gt;&lt;/canvas&gt;\n\n  &lt;script&gt;\n    const hexInput = document.getElementById(\"hex\");\n    const rInput = document.getElementById(\"r\");\n    const gInput = document.getElementById(\"g\");\n    const bInput = document.getElementById(\"b\");\n    const aInput = document.getElementById(\"a\");\n    const previewImg = document.getElementById(\"previewImg\");\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    function componentToHex(c) {\n      const hex = c.toString(16);\n      return hex.length == 1 ? \"0\" + hex : hex;\n    }\n\n    function rgbaToHex(r, g, b, a) {\n      const alpha255 = Math.round(a * 255);\n      return (\n        \"#\" +\n        componentToHex(r) +\n        componentToHex(g) +\n        componentToHex(b) +\n        componentToHex(alpha255)\n      );\n    }\n\n    function hexToRGBA(hex) {\n      hex = hex.replace(\"#\", \"\");\n      if (hex.length === 6 || hex.length === 8) {\n        const r = parseInt(hex.slice(0, 2), 16);\n        const g = parseInt(hex.slice(2, 4), 16);\n        const b = parseInt(hex.slice(4, 6), 16);\n        const a = hex.length === 8 ? parseInt(hex.slice(6, 8), 16) / 255 : 1.0;\n        rInput.value = r;\n        gInput.value = g;\n        bInput.value = b;\n        aInput.value = a.toFixed(2);\n        updateCanvas(false); // Prevent circular update\n      }\n    }\n\n    function updateCanvas(updateHex = true) {\n      const r = parseInt(rInput.value);\n      const g = parseInt(gInput.value);\n      const b = parseInt(bInput.value);\n      const a = parseFloat(aInput.value);\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = `rgba(${r},${g},${b},${a})`;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      const dataURL = canvas.toDataURL(\"image/png\");\n      previewImg.src = dataURL;\n\n      if (updateHex) {\n        hexInput.value = rgbaToHex(r, g, b, a);\n      }\n    }\n\n    function downloadPNG() {\n      const link = document.createElement(\"a\");\n      link.download = \"color.png\";\n      link.href = canvas.toDataURL(\"image/png\");\n      link.click();\n    }\n\n    // Sync updates\n    [rInput, gInput, bInput, aInput].forEach(input =&gt; {\n      input.addEventListener(\"input\", () =&gt; updateCanvas(true));\n    });\n\n    hexInput.addEventListener(\"input\", () =&gt; hexToRGBA(hexInput.value));\n\n    // Initial preview\n    updateCanvas();\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre>"},{"location":"guides/engine/expose_asset_registry_functions/","title":"Expose Asset Registry Functions","text":"<p>Code Here</p> <p>For 4.17-4.19 as they're exposed already 4.20+</p>"},{"location":"guides/engine/expose_set_var_functions/","title":"Expose Set Variable Functions","text":"<p>Code Here</p>"},{"location":"guides/materials/scalable_tile_material/","title":"Scalable Tile Material","text":""},{"location":"guides/navigation/add_new_nav_mesh/","title":"Add New Nav Mesh","text":""},{"location":"guides/project_management/github_desktop_example/","title":"Github Desktop Example","text":""},{"location":"guides/textures/flat_textures/","title":"Flat Textures","text":""}]}